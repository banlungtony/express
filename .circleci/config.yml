version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback 
            - v1-dependencies-
      - run: npm install
      - run: npm test
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: "Build docker image and push to docker hub"
          command: |
            cp Dockerfile.production Dockerfile
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker build -t banlungtony/express:latest .
              docker build -t banlungtony/express:${CIRCLE_SHA1} .
              docker push banlungtony/express:latest
              docker push banlungtony/express:${CIRCLE_SHA1}
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              docker build -t banlungtony/express:latest .
              docker push banlungtony/express:latest
            else
              echo "End Build Docker => This is ${CIRCLE_BRANCH} branch"
            fi
      - run: echo "Build Done"
  
  test:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback 
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: echo "Test Done"
  
  deploy-prod:
    docker:
      - image: circleci/node:8.11.1-stretch
    steps:
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: "Deploy"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker run --rm -it \
              -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
              -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
              -e CATTLE_URL="$CATTLE_URL" \
              etlweather/gaucho upgrade $RANCHER_EXAMPLE_NODEJS \
              --imageUuid 'docker:banlungtony/express:latest' \
              --batch_size 5 --start_first \
              --auto_complete --timeout 600 \
              /
            else
              echo "Do not deploy => This is ${CIRCLE_BRANCH} branch"
            fi
      - run: echo "Deploy Done"

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - dev
                - uat
                - prod
                - master
                - /feature-.*/
      - deploy-prod:
          type: approval
          requires:
            - build
            - test
          filters:
            branches:
              only: master